* Work on these things first:
** stateless function components
** Create Tournament
** Join Tournament
*** add team to tourney if it is one of your teams
*** can only join if you don't already have a team in tourney
** Create / request match
** Submit match results
** Approve match results
** Make sure BE is working right
*** Ensure all redundant records are updated (esp stats duplicated all over)
* Data Model
** Tournaments
*** ID
*** Name
*** Descriptions
*** Rules
*** Created
*** Matches played
*** Tier structure [1,3,5,8]
*** Teams
**** ID
**** Name
**** Users
***** ID
***** Name
**** Wins
**** Losses
**** Ties
**** Average
**** Standing
***** Rank
***** Number of Competitors
**** Matches (for this tourney only)
***** ID
***** Played (mm/dd/yyyy) (when results approved)
***** Teams
****** ID
****** Name
****** Result (null, -1, 0, 1)
** Profiles
*** ID
*** Created
*** Role
*** Last Seen
*** Tourneys (id, name, standing)
*** Teams
*** Matches
**** ID
**** Played (mm/dd/yyyy) (when results approved)
**** Teams
***** ID
***** Name
***** Result (null, -1, 0, 1)
*** Wins
*** Losses
*** Ties
*** Average
*** Standing
**** Rank
**** Total Users
** Teams
*** Users
**** ID
**** Name
*** Matches
**** Teams
***** ID
***** Name
***** Result (null, -1, 0 or 1) (not played, lost, tied, won)
***** Users
****** ID
****** Name
*** Tourneys
**** ID
**** Name
**** Wins
**** Losses
**** Ties
**** Average
**** Standing
***** Rank
***** Number of Teams
*** Wins
*** Losses
*** Ties
*** Average
*** Standing
** Matches
*** ID
*** Played (when results approved)
*** Tourney
**** ID
**** Name
*** Teams
**** ID
**** Name
**** Result (null, -1, 0 or 1) (not played, lost, tied, won)
**** Users
***** ID
***** Name
* Design
** Match results submitted by other teams will show up as a prominent notification
*** Approving results should be very sleek and easy
** Circles to represent teams, arranged in a pyramid
*** Circle has team avator or something, then team average
*** Hover for tooltip with more info
*** Click to see team details and full record
** Tourney Name as big heading
** Tourney description as subheading
** Tourney rules as collapsible thing
* Features
** Users can create account, login
** Users can create teams, may contain another user
** Users can create tourneys
** Users can enter one of their teams into a tourney
** Users can create and submit matches
*** Match results must be approved by both teams before they count
* Enhancements
** Route for single tournament, match team etc
** Form validations
** on logout, redirect to login...or maybe onauth change callback should handle this?
** Streamlined flow from create user, create team, join tournament
** After login, show user's pending match results and active tourneys
** Activity Feed Widget
** Other user must accept request to be on a team
** Can only play teams in their tier and adjacent tiers
** Error message if same team tries to join tourney again
* Misc
** https://console.cloud.google.com/apis/credentials?project=pyramid-tourney-tracker
